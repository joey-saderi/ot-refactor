define("./workbox-0627a8fc.js",["exports"],(function(t){"use strict";try{self["workbox:core:5.1.4"]&&_()}catch(t){}const e=(t,...e)=>{let s=t;return e.length>0&&(s+=" :: "+JSON.stringify(e)),s};class s extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.4"]&&_()}catch(t){}const n=t=>t&&"object"==typeof t?t:{handle:t};class i{constructor(t,e,s="GET"){this.handler=n(e),this.match=t,this.method=s}}class r extends i{constructor(t,e,s){super(({url:e})=>{const s=t.exec(e.href);if(s&&(e.origin===location.origin||0===s.index))return s.slice(1)},e,s)}}class c{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",t=>{const{request:e}=t,s=this.handleRequest({request:e,event:t});s&&t.respondWith(s)})}addCacheListener(){self.addEventListener("message",t=>{if(t.data&&"CACHE_URLS"===t.data.type){const{payload:e}=t.data,s=Promise.all(e.urlsToCache.map(t=>{"string"==typeof t&&(t=[t]);const e=new Request(...t);return this.handleRequest({request:e})}));t.waitUntil(s),t.ports&&t.ports[0]&&s.then(()=>t.ports[0].postMessage(!0))}})}handleRequest({request:t,event:e}){const s=new URL(t.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:i}=this.findMatchingRoute({url:s,request:t,event:e});let r,c=i&&i.handler;if(!c&&this.s&&(c=this.s),c){try{r=c.handle({url:s,request:t,event:e,params:n})}catch(t){r=Promise.reject(t)}return r instanceof Promise&&this.i&&(r=r.catch(n=>this.i.handle({url:s,request:t,event:e}))),r}}findMatchingRoute({url:t,request:e,event:s}){const n=this.t.get(e.method)||[];for(const i of n){let n;const r=i.match({url:t,request:e,event:s});if(r)return n=r,(Array.isArray(r)&&0===r.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(n=void 0),{route:i,params:n}}return{}}setDefaultHandler(t){this.s=n(t)}setCatchHandler(t){this.i=n(t)}registerRoute(t){this.t.has(t.method)||this.t.set(t.method,[]),this.t.get(t.method).push(t)}unregisterRoute(t){if(!this.t.has(t.method))throw new s("unregister-route-but-not-found-with-method",{method:t.method});const e=this.t.get(t.method).indexOf(t);if(!(e>-1))throw new s("unregister-route-route-not-registered");this.t.get(t.method).splice(e,1)}}let a;const o=()=>(a||(a=new c,a.addFetchListener(),a.addCacheListener()),a);try{self["workbox:core:5.1.4"]&&_()}catch(t){}const h=(t,...e)=>{let s=t;return e.length>0&&(s+=" :: "+JSON.stringify(e)),s};class u extends Error{constructor(t,e){super(h(t,e)),this.name=t,this.details=e}}const l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=t=>[l.prefix,t,l.suffix].filter(t=>t&&t.length>0).join("-"),w=t=>t||f(l.runtime);function p(t){t.then(()=>{})}const d=new Set;class y{constructor(t,e,{onupgradeneeded:s,onversionchange:n}={}){this.o=null,this.h=t,this.u=e,this.l=s,this.p=n||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((t,e)=>{let s=!1;setTimeout(()=>{s=!0,e(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this.h,this.u);n.onerror=()=>e(n.error),n.onupgradeneeded=t=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this.l&&this.l(t)},n.onsuccess=()=>{const e=n.result;s?e.close():(e.onversionchange=this.p.bind(this),t(e))}}),this}async getKey(t,e){return(await this.getAllKeys(t,e,1))[0]}async getAll(t,e,s){return await this.getAllMatching(t,{query:e,count:s})}async getAllKeys(t,e,s){return(await this.getAllMatching(t,{query:e,count:s,includeKeys:!0})).map(t=>t.key)}async getAllMatching(t,{index:e,query:s=null,direction:n="next",count:i,includeKeys:r=!1}={}){return await this.transaction([t],"readonly",(c,a)=>{const o=c.objectStore(t),h=e?o.index(e):o,u=[],l=h.openCursor(s,n);l.onsuccess=()=>{const t=l.result;t?(u.push(r?t:t.value),i&&u.length>=i?a(u):t.continue()):a(u)}})}async transaction(t,e,s){return await this.open(),await new Promise((n,i)=>{const r=this.o.transaction(t,e);r.onabort=()=>i(r.error),r.oncomplete=()=>n(),s(r,t=>n(t))})}async g(t,e,s,...n){return await this.transaction([e],s,(s,i)=>{const r=s.objectStore(e),c=r[t].apply(r,n);c.onsuccess=()=>i(c.result)})}close(){this.o&&(this.o.close(),this.o=null)}}y.prototype.OPEN_TIMEOUT=2e3;const g={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[t,e]of Object.entries(g))for(const s of e)s in IDBObjectStore.prototype&&(y.prototype[s]=async function(e,...n){return await this.g(s,e,t,...n)});try{self["workbox:expiration:5.1.4"]&&_()}catch(t){}const m=t=>{const e=new URL(t,location.href);return e.hash="",e.href};class q{constructor(t){this.m=t,this.o=new y("workbox-expiration",1,{onupgradeneeded:t=>this.q(t)})}q(t){const e=t.target.result.createObjectStore("cache-entries",{keyPath:"id"});e.createIndex("cacheName","cacheName",{unique:!1}),e.createIndex("timestamp","timestamp",{unique:!1}),(async t=>{await new Promise((e,s)=>{const n=indexedDB.deleteDatabase(t);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{e()}})})(this.m)}async setTimestamp(t,e){const s={url:t=m(t),timestamp:e,cacheName:this.m,id:this.v(t)};await this.o.put("cache-entries",s)}async getTimestamp(t){return(await this.o.get("cache-entries",this.v(t))).timestamp}async expireEntries(t,e){const s=await this.o.transaction("cache-entries","readwrite",(s,n)=>{const i=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),r=[];let c=0;i.onsuccess=()=>{const s=i.result;if(s){const n=s.value;n.cacheName===this.m&&(t&&n.timestamp<t||e&&c>=e?r.push(s.value):c++),s.continue()}else n(r)}}),n=[];for(const t of s)await this.o.delete("cache-entries",t.id),n.push(t.url);return n}v(t){return this.m+"|"+m(t)}}class v{constructor(t,e={}){this.R=!1,this.U=!1,this.L=e.maxEntries,this.N=e.maxAgeSeconds,this.m=t,this.O=new q(t)}async expireEntries(){if(this.R)return void(this.U=!0);this.R=!0;const t=this.N?Date.now()-1e3*this.N:0,e=await this.O.expireEntries(t,this.L),s=await self.caches.open(this.m);for(const t of e)await s.delete(t);this.R=!1,this.U&&(this.U=!1,p(this.expireEntries()))}async updateTimestamp(t){await this.O.setTimestamp(t,Date.now())}async isURLExpired(t){if(this.N){return await this.O.getTimestamp(t)<Date.now()-1e3*this.N}return!1}async delete(){this.U=!1,await this.O.expireEntries(1/0)}}try{self["workbox:core:5.1.4"]&&_()}catch(t){}const R=(t,...e)=>{let s=t;return e.length>0&&(s+=" :: "+JSON.stringify(e)),s};class U extends Error{constructor(t,e){super(R(t,e)),this.name=t,this.details=e}}const x={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},L=t=>[x.prefix,t,x.suffix].filter(t=>t&&t.length>0).join("-"),N=t=>t||L(x.runtime),E=new Set;const O=t=>new URL(String(t),location.href).href.replace(new RegExp("^"+location.origin),""),b=(t,e)=>t.filter(t=>e in t),D=async({request:t,mode:e,plugins:s=[]})=>{const n=b(s,"cacheKeyWillBeUsed");let i=t;for(const t of n)i=await t.cacheKeyWillBeUsed.call(t,{mode:e,request:i}),"string"==typeof i&&(i=new Request(i));return i},K=async({cacheName:t,request:e,event:s,matchOptions:n,plugins:i=[]})=>{const r=await self.caches.open(t),c=await D({plugins:i,request:e,mode:"read"});let a=await r.match(c,n);for(const e of i)if("cachedResponseWillBeUsed"in e){const i=e.cachedResponseWillBeUsed;a=await i.call(e,{cacheName:t,event:s,matchOptions:n,cachedResponse:a,request:c})}return a},M=async({cacheName:t,request:e,response:s,event:n,plugins:i=[],matchOptions:r})=>{const c=await D({plugins:i,request:e,mode:"write"});if(!s)throw new U("cache-put-with-no-response",{url:O(c.url)});const a=await(async({request:t,response:e,event:s,plugins:n=[]})=>{let i=e,r=!1;for(const e of n)if("cacheWillUpdate"in e){r=!0;const n=e.cacheWillUpdate;if(i=await n.call(e,{request:t,response:i,event:s}),!i)break}return r||(i=i&&200===i.status?i:void 0),i||null})({event:n,plugins:i,response:s,request:c});if(!a)return;const o=await self.caches.open(t),h=b(i,"cacheDidUpdate"),u=h.length>0?await K({cacheName:t,matchOptions:r,request:c}):null;try{await o.put(c,a)}catch(t){throw"QuotaExceededError"===t.name&&await async function(){for(const t of E)await t()}(),t}for(const e of h)await e.cacheDidUpdate.call(e,{cacheName:t,event:n,oldResponse:u,newResponse:a,request:c})},S=K,k=async({request:t,fetchOptions:e,event:s,plugins:n=[]})=>{if("string"==typeof t&&(t=new Request(t)),s instanceof FetchEvent&&s.preloadResponse){const t=await s.preloadResponse;if(t)return t}const i=b(n,"fetchDidFail"),r=i.length>0?t.clone():null;try{for(const e of n)if("requestWillFetch"in e){const n=e.requestWillFetch,i=t.clone();t=await n.call(e,{request:i,event:s})}}catch(t){throw new U("plugin-error-request-will-fetch",{thrownError:t})}const c=t.clone();try{let i;i="navigate"===t.mode?await fetch(t):await fetch(t,e);for(const t of n)"fetchDidSucceed"in t&&(i=await t.fetchDidSucceed.call(t,{event:s,request:c,response:i}));return i}catch(t){for(const e of i)await e.fetchDidFail.call(e,{error:t,event:s,originalRequest:r.clone(),request:c.clone()});throw t}};try{self["workbox:strategies:5.1.4"]&&_()}catch(t){}const A={cacheWillUpdate:async({response:t})=>200===t.status||0===t.status?t:null};try{self["workbox:core:5.1.4"]&&_()}catch(t){}try{self["workbox:core:5.1.4"]&&_()}catch(t){}const T={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},P=t=>[T.prefix,t,T.suffix].filter(t=>t&&t.length>0).join("-"),W=t=>t||P(T.precache),C=t=>new URL(String(t),location.href).href.replace(new RegExp("^"+location.origin),""),F=(t,...e)=>{let s=t;return e.length>0&&(s+=" :: "+JSON.stringify(e)),s};class B extends Error{constructor(t,e){super(F(t,e)),this.name=t,this.details=e}}const H=new Set;const I=(t,e)=>t.filter(t=>e in t),j=async({request:t,mode:e,plugins:s=[]})=>{const n=I(s,"cacheKeyWillBeUsed");let i=t;for(const t of n)i=await t.cacheKeyWillBeUsed.call(t,{mode:e,request:i}),"string"==typeof i&&(i=new Request(i));return i},J=async({cacheName:t,request:e,event:s,matchOptions:n,plugins:i=[]})=>{const r=await self.caches.open(t),c=await j({plugins:i,request:e,mode:"read"});let a=await r.match(c,n);for(const e of i)if("cachedResponseWillBeUsed"in e){const i=e.cachedResponseWillBeUsed;a=await i.call(e,{cacheName:t,event:s,matchOptions:n,cachedResponse:a,request:c})}return a},Q=async({cacheName:t,request:e,response:s,event:n,plugins:i=[],matchOptions:r})=>{const c=await j({plugins:i,request:e,mode:"write"});if(!s)throw new B("cache-put-with-no-response",{url:C(c.url)});const a=await(async({request:t,response:e,event:s,plugins:n=[]})=>{let i=e,r=!1;for(const e of n)if("cacheWillUpdate"in e){r=!0;const n=e.cacheWillUpdate;if(i=await n.call(e,{request:t,response:i,event:s}),!i)break}return r||(i=i&&200===i.status?i:void 0),i||null})({event:n,plugins:i,response:s,request:c});if(!a)return;const o=await self.caches.open(t),h=I(i,"cacheDidUpdate"),u=h.length>0?await J({cacheName:t,matchOptions:r,request:c}):null;try{await o.put(c,a)}catch(t){throw"QuotaExceededError"===t.name&&await async function(){for(const t of H)await t()}(),t}for(const e of h)await e.cacheDidUpdate.call(e,{cacheName:t,event:n,oldResponse:u,newResponse:a,request:c})},G=async({request:t,fetchOptions:e,event:s,plugins:n=[]})=>{if("string"==typeof t&&(t=new Request(t)),s instanceof FetchEvent&&s.preloadResponse){const t=await s.preloadResponse;if(t)return t}const i=I(n,"fetchDidFail"),r=i.length>0?t.clone():null;try{for(const e of n)if("requestWillFetch"in e){const n=e.requestWillFetch,i=t.clone();t=await n.call(e,{request:i,event:s})}}catch(t){throw new B("plugin-error-request-will-fetch",{thrownError:t})}const c=t.clone();try{let i;i="navigate"===t.mode?await fetch(t):await fetch(t,e);for(const t of n)"fetchDidSucceed"in t&&(i=await t.fetchDidSucceed.call(t,{event:s,request:c,response:i}));return i}catch(t){for(const e of i)await e.fetchDidFail.call(e,{error:t,event:s,originalRequest:r.clone(),request:c.clone()});throw t}};let V;async function $(t,e){const s=t.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},i=e?e(n):n,r=function(){if(void 0===V){const t=new Response("");if("body"in t)try{new Response(t.body),V=!0}catch(t){V=!1}V=!1}return V}()?s.body:await s.blob();return new Response(r,i)}try{self["workbox:precaching:5.1.4"]&&_()}catch(t){}function z(t){if(!t)throw new B("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:e,url:s}=t;if(!s)throw new B("add-to-cache-list-unexpected-type",{entry:t});if(!e){const t=new URL(s,location.href);return{cacheKey:t.href,url:t.href}}const n=new URL(s,location.href),i=new URL(s,location.href);return n.searchParams.set("__WB_REVISION__",e),{cacheKey:n.href,url:i.href}}class X{constructor(t){this.m=W(t),this._=new Map,this.D=new Map,this.K=new Map}addToCacheList(t){const e=[];for(const s of t){"string"==typeof s?e.push(s):s&&void 0===s.revision&&e.push(s.url);const{cacheKey:t,url:n}=z(s),i="string"!=typeof s&&s.revision?"reload":"default";if(this._.has(n)&&this._.get(n)!==t)throw new B("add-to-cache-list-conflicting-entries",{firstEntry:this._.get(n),secondEntry:t});if("string"!=typeof s&&s.integrity){if(this.K.has(t)&&this.K.get(t)!==s.integrity)throw new B("add-to-cache-list-conflicting-integrities",{url:n});this.K.set(t,s.integrity)}if(this._.set(n,t),this.D.set(n,i),e.length>0){const t=`Workbox is precaching URLs without revision info: ${e.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(t)}}}async install({event:t,plugins:e}={}){const s=[],n=[],i=await self.caches.open(this.m),r=await i.keys(),c=new Set(r.map(t=>t.url));for(const[t,e]of this._)c.has(e)?n.push(t):s.push({cacheKey:e,url:t});const a=s.map(({cacheKey:s,url:n})=>{const i=this.K.get(s),r=this.D.get(n);return this.M({cacheKey:s,cacheMode:r,event:t,integrity:i,plugins:e,url:n})});await Promise.all(a);return{updatedURLs:s.map(t=>t.url),notUpdatedURLs:n}}async activate(){const t=await self.caches.open(this.m),e=await t.keys(),s=new Set(this._.values()),n=[];for(const i of e)s.has(i.url)||(await t.delete(i),n.push(i.url));return{deletedURLs:n}}async M({cacheKey:t,url:e,cacheMode:s,event:n,plugins:i,integrity:r}){const c=new Request(e,{integrity:r,cache:s,credentials:"same-origin"});let a,o=await G({event:n,plugins:i,request:c});for(const t of i||[])"cacheWillUpdate"in t&&(a=t);if(!(a?await a.cacheWillUpdate({event:n,request:c,response:o}):o.status<400))throw new B("bad-precaching-response",{url:e,status:o.status});o.redirected&&(o=await $(o)),await Q({event:n,plugins:i,response:o,request:t===e?c:new Request(t),cacheName:this.m,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._}getCachedURLs(){return[...this._.keys()]}getCacheKeyForURL(t){const e=new URL(t,location.href);return this._.get(e.href)}async matchPrecache(t){const e=t instanceof Request?t.url:t,s=this.getCacheKeyForURL(e);if(s){return(await self.caches.open(this.m)).match(s)}}createHandler(t=!0){return async({request:e})=>{try{const t=await this.matchPrecache(e);if(t)return t;throw new B("missing-precache-entry",{cacheName:this.m,url:e instanceof Request?e.url:e})}catch(s){if(t)return fetch(e);throw s}}}createHandlerBoundToURL(t,e=!0){if(!this.getCacheKeyForURL(t))throw new B("non-precached-url",{url:t});const s=this.createHandler(e),n=new Request(t);return()=>s({request:n})}}let Y;const Z=()=>(Y||(Y=new X),Y);const tt=(t,e)=>{const s=Z().getURLsToCacheKeys();for(const n of function*(t,{ignoreURLParametersMatching:e,directoryIndex:s,cleanURLs:n,urlManipulation:i}={}){const r=new URL(t,location.href);r.hash="",yield r.href;const c=function(t,e=[]){for(const s of[...t.searchParams.keys()])e.some(t=>t.test(s))&&t.searchParams.delete(s);return t}(r,e);if(yield c.href,s&&c.pathname.endsWith("/")){const t=new URL(c.href);t.pathname+=s,yield t.href}if(n){const t=new URL(c.href);t.pathname+=".html",yield t.href}if(i){const t=i({url:r});for(const e of t)yield e.href}}(t,e)){const t=s.get(n);if(t)return t}};let et=!1;function st(t){et||((({ignoreURLParametersMatching:t=[/^utm_/],directoryIndex:e="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const i=W();self.addEventListener("fetch",r=>{const c=tt(r.request.url,{cleanURLs:s,directoryIndex:e,ignoreURLParametersMatching:t,urlManipulation:n});if(!c)return;let a=self.caches.open(i).then(t=>t.match(c)).then(t=>t||fetch(c));r.respondWith(a)})})(t),et=!0)}const nt=[],it={get:()=>nt,add(t){nt.push(...t)}},rt=t=>{const e=Z(),s=it.get();t.waitUntil(e.install({event:t,plugins:s}).catch(t=>{throw t}))},ct=t=>{const e=Z();t.waitUntil(e.activate())};t.CacheFirst=class{constructor(t={}){this.m=N(t.cacheName),this.S=t.plugins||[],this.k=t.fetchOptions,this.A=t.matchOptions}async handle({event:t,request:e}){"string"==typeof e&&(e=new Request(e));let s,n=await S({cacheName:this.m,request:e,event:t,matchOptions:this.A,plugins:this.S});if(!n)try{n=await this.T(e,t)}catch(t){s=t}if(!n)throw new U("no-response",{url:e.url,error:s});return n}async T(t,e){const s=await k({request:t,event:e,fetchOptions:this.k,plugins:this.S}),n=s.clone(),i=M({cacheName:this.m,request:t,response:n,event:e,plugins:this.S});if(e)try{e.waitUntil(i)}catch(t){}return s}},t.ExpirationPlugin=class{constructor(t={}){var e;this.cachedResponseWillBeUsed=async({event:t,request:e,cacheName:s,cachedResponse:n})=>{if(!n)return null;const i=this.P(n),r=this.W(s);p(r.expireEntries());const c=r.updateTimestamp(e.url);if(t)try{t.waitUntil(c)}catch(t){}return i?n:null},this.cacheDidUpdate=async({cacheName:t,request:e})=>{const s=this.W(t);await s.updateTimestamp(e.url),await s.expireEntries()},this.C=t,this.N=t.maxAgeSeconds,this.F=new Map,t.purgeOnQuotaError&&(e=()=>this.deleteCacheAndMetadata(),d.add(e))}W(t){if(t===w())throw new u("expire-custom-caches-only");let e=this.F.get(t);return e||(e=new v(t,this.C),this.F.set(t,e)),e}P(t){if(!this.N)return!0;const e=this.B(t);if(null===e)return!0;return e>=Date.now()-1e3*this.N}B(t){if(!t.headers.has("date"))return null;const e=t.headers.get("date"),s=new Date(e).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[t,e]of this.F)await self.caches.delete(t),await e.delete();this.F=new Map}},t.StaleWhileRevalidate=class{constructor(t={}){if(this.m=N(t.cacheName),this.S=t.plugins||[],t.plugins){const e=t.plugins.some(t=>!!t.cacheWillUpdate);this.S=e?t.plugins:[A,...t.plugins]}else this.S=[A];this.k=t.fetchOptions,this.A=t.matchOptions}async handle({event:t,request:e}){"string"==typeof e&&(e=new Request(e));const s=this.T({request:e,event:t});let n,i=await S({cacheName:this.m,request:e,event:t,matchOptions:this.A,plugins:this.S});if(i){if(t)try{t.waitUntil(s)}catch(n){}}else try{i=await s}catch(t){n=t}if(!i)throw new U("no-response",{url:e.url,error:n});return i}async T({request:t,event:e}){const s=await k({request:t,event:e,fetchOptions:this.k,plugins:this.S}),n=M({cacheName:this.m,request:t,response:s.clone(),event:e,plugins:this.S});if(e)try{e.waitUntil(n)}catch(t){}return s}},t.cleanupOutdatedCaches=function(){self.addEventListener("activate",t=>{const e=W();t.waitUntil((async(t,e="-precache-")=>{const s=(await self.caches.keys()).filter(s=>s.includes(e)&&s.includes(self.registration.scope)&&s!==t);return await Promise.all(s.map(t=>self.caches.delete(t))),s})(e).then(t=>{}))})},t.clientsClaim=function(){self.addEventListener("activate",()=>self.clients.claim())},t.precacheAndRoute=function(t,e){!function(t){Z().addToCacheList(t),t.length>0&&(self.addEventListener("install",rt),self.addEventListener("activate",ct))}(t),st(e)},t.registerRoute=function(t,e,n){let c;if("string"==typeof t){const s=new URL(t,location.href);c=new i(({url:t})=>t.href===s.href,e,n)}else if(t instanceof RegExp)c=new r(t,e,n);else if("function"==typeof t)c=new i(t,e,n);else{if(!(t instanceof i))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});c=t}return o().registerRoute(c),c},t.skipWaiting=function(){self.addEventListener("install",()=>self.skipWaiting())}}));
